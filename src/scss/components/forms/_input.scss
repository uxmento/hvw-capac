/*
 * INPUT
 * Input styling
 */

.#{$ns}input {
  $root: &;

  position: relative;
  display: block;

  &__input {

    $input: &;
    display: block;
    width: 100%;
    height: $input-height;
    min-height: 3rem;
    padding: rem(14px) rem(16px);
    margin: 0;
    border: 1px solid #ccc;
    border-radius: $border-radius;
    font-size: $font-size;
    background-color: #fff;
    transition: $transition;
    font-family: $font-family;

    &::placeholder {
      color: rgba($color_default-text, .4);
    }

    &:hover{    
      border-color: $color_default-text;
    }

    &:focus {
      box-shadow: $color_tertiary 0px 0px 0px 1px;
      outline: 0;
    }

    &:focus:not(:focus-visible) {
      box-shadow: none;
      border: none;
    }

    &:focus-visible,
    &:active,
    &:not(:placeholder-shown),
    &.#{$ns}has-value, 
    .#{$ns}has-value &{
      outline: 0;
      border: 1px solid $color_tertiary;
      box-shadow: inset $color_tertiary 0px 0px 0px 1px;
    }

    &--icon-left {
      padding-left: $icon-padding;
    }
    
    &--icon-right {
      padding-right: $icon-padding;
    }

    // textarea options
    #{$root}--multiline &{
      resize: vertical;
      height: auto;
      align-self: top;
    }

  }
 
  &__icon {
    position: absolute;
    top: 50%;
    right: 1rem;
    fill: $color_icons;
    pointer-events: none;
    transform: translateY(-50%);

    &--start{
      left: .85rem;
    }

    &--end {
      right: .85rem;
    }

    // case multiline
    #{$root}--multiline &{
      height: calc(3rem - 2px);
      top: 1.5rem;
    }
  }

  &__icon--start {
    margin-right: rem(16px);
  }

  &__icon--end {
      margin-left: rem(16px);
  }

}

.#{$ns}input__list {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    padding: 0 !important;

    &--horizontal {
        flex-direction: row;
        margin: 0 -.5em;

        li {
            padding: 0 .5em;
        }
    }

    &--vertical {
        flex-direction: column;

        li:nth-child(n+2) {
            margin-top: .5em;
        }
    }
}

.#{$ns}valid,
.#{$ns}warning,
.#{$ns}info,
.#{$ns}error {
  .#{$ns}input__input {
    border: $border-width solid $color_tertiary;

    &:not(:placeholder-shown){
      box-shadow: none;
    }
    @include focus($color_tertiary);
  }
}

.#{$ns}valid {
  .#{$ns}input__input {
    border-color: $color_valid;
    //color: $color_valid;
  }

  .#{$ns}input__icon {
    fill: $color_valid;
  }
}

.#{$ns}warning {
  .#{$ns}input__input {
    border-color: $color_warning;
    //color: $color_warning;
  }

  .#{$ns}input__icon {
    fill: $color_warning;
  }
}

.#{$ns}info {
  .#{$ns}input__input {
    border-color: $color_info;
    //color: $color_info;
  }

  .#{$ns}input__icon {
    fill: $color_info;
  }
}

.#{$ns}error {
  .#{$ns}input__input {
    border-color: $color_error;
    //color: $color_error;
  }

  .#{$ns}input__icon {
    fill: $color_error;
  }
}

  
.#{$ns}disabled {

  .#{$ns}input__input {
    border-color: rgba($color-disabled, .25);
    background-color: $color_background-disabled;
    pointer-events: none;
    opacity: $opacity;

    &,&::placeholder {
      color: $color_disabled;
    }
  }
}
