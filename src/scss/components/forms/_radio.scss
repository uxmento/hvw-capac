/*
 * RADIO
 * Radio styling
 */

 .#{$ns}radio {
    display: inline-block;
    vertical-align: baseline;
    cursor: pointer;
    -moz-appearance: none;
    -webkit-appearance: none;
    position: relative;
    overflow: visible;
    padding: 2px 0 2px 4px;

    &__input {
        top: 0;
        left: 0;
        width: 100%;
        cursor: inherit;
        height: 100%;
        margin: 0;
        opacity: 0;
        padding: 0;
        z-index: 1;
        position: absolute;
    }

    &__icon {
        position: relative;
        top: .125rem;
        left: 0;
        display: inline-flex;
        vertical-align: baseline;
        width: 1rem;
        height: 1rem;
        padding: 4px;
        margin: 0;
        border: 1px solid $color-border;
        border-radius: 50%;
        fill: transparent;
        background-color: $color_white;
        transition: $transition;

        :focus + &,
        .has-focus &{ 
            outline: 0;
            box-shadow: rgb(255, 255, 255) 0px 0px 0px 2px, $color_tertiary 0px 0px 0px 4px;
        }
        :focus:not(:focus-visible) + &{
            /* Undo all the above focused button styles
            if the button has focus but the browser wouldn't normally
            show default focus styles */
            box-shadow: none;
        }
        :focus-visible + &, 
        .has-focus &{ 
            /* Some even *more* exciting button focus styles */ 
            outline: 0;
            box-shadow: rgb(255, 255, 255) 0px 0px 0px 2px, $color_tertiary 0px 0px 0px 4px !important;
        }

        :checked + & {
            fill: #333;
            border-color: $color_default-text;
        }

        :hover + &,
        :active + & {
            border-color: $color_default-text;
        }
    }

    &__label {
        display: inline-block;
        vertical-align: baseline;
        padding: 0 .25rem;
    }
}

.#{$ns}valid {
    :not(:checked) + .#{$ns}radio__icon.#{$ns}icon {
        fill: transparent !important;
    }
    :checked + .#{$ns}radio__icon.#{$ns}icon {
        border-color: $color_valid;
    }
}

.#{$ns}warning {
    :not(:checked) + .#{$ns}radio__icon.#{$ns}icon {
        fill: transparent !important;
    }
    :checked + .#{$ns}radio__icon.#{$ns}icon {
        border-color: $color_warning;
    }
}

.#{$ns}info {
    :not(:checked) + .#{$ns}radio__icon.#{$ns}icon {
        fill: transparent !important;
    }
    :checked + .#{$ns}radio__icon.#{$ns}icon {
        border-color: $color_info;
    }
}

.#{$ns}error {
    :not(:checked) + .#{$ns}radio__icon.#{$ns}icon {
        fill: transparent !important;
    }
    :checked + .#{$ns}radio__icon.#{$ns}icon {
        border-color: $color_error;
    }
}


.#{$ns}disabled {
    :not(:checked) + .#{$ns}radio__icon.#{$ns}icon {
        fill: transparent !important;
    }
    :checked + .#{$ns}radio__icon.#{$ns}icon {
        border-color: $color_disabled !important;
        opacity: $opacity !important;
    }
    :hover + .#{$ns}radio__icon.#{$ns}icon,
    :active + .#{$ns}radio__icon.#{$ns}icon {
        border-color: $color-border !important;
    }
}