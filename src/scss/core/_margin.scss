/*
 * MARGIN
 * Margin utility classes
 */

.m {
  @each $name, $spacing in $spacings {
    &-#{$name} {
      margin-top: if($spacing == auto, $spacing, rem($spacing)) !important;
      margin-bottom: if($spacing == auto, $spacing, rem($spacing)) !important;
      margin-left: if($spacing == auto, $spacing, rem($spacing)) !important;
      margin-right: if($spacing == auto, $spacing, rem($spacing)) !important;
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      @each $name, $spacing in $spacings {
        &-#{$name}--#{$breakpoint} {
          margin-top: if($spacing == auto, $spacing, rem($spacing)) !important;
          margin-bottom: if($spacing == auto, $spacing, rem($spacing)) !important;
          margin-left: if($spacing == auto, $spacing, rem($spacing)) !important;
          margin-right: if($spacing == auto, $spacing, rem($spacing)) !important;
        }
      }
    }
  }
}

.mx {
  @each $name, $spacing in $spacings {
    &-#{$name} {
      margin-left: if($spacing == auto, $spacing, rem($spacing)) !important;
      margin-right: if($spacing == auto, $spacing, rem($spacing)) !important;
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      @each $name, $spacing in $spacings {
        &-#{$name}--#{$breakpoint} {
          margin-left: if($spacing == auto, $spacing, rem($spacing)) !important;
          margin-right: if($spacing == auto, $spacing, rem($spacing)) !important;
        }
      }
    }
  }
}

.my {
  @each $name, $spacing in $spacings {
    &-#{$name} {
      margin-top: if($spacing == auto, $spacing, rem($spacing)) !important;
      margin-bottom: if($spacing == auto, $spacing, rem($spacing)) !important;
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      @each $name, $spacing in $spacings {
        &-#{$name}--#{$breakpoint} {
          margin-top: if($spacing == auto, $spacing, rem($spacing)) !important;
          margin-bottom: if($spacing == auto, $spacing, rem($spacing)) !important;
        }
      }
    }
  }
}

.mt {
  @each $name, $spacing in $spacings {
    &-#{$name} {
      margin-top: if($spacing == auto, $spacing, rem($spacing)) !important;
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      @each $name, $spacing in $spacings {
        &-#{$name}--#{$breakpoint} {
          margin-top: if($spacing == auto, $spacing, rem($spacing)) !important;
        }
      }
    }
  }
}

.mb {
  @each $name, $spacing in $spacings {
    &-#{$name} {
      margin-bottom: if($spacing == auto, $spacing, rem($spacing)) !important;
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      @each $name, $spacing in $spacings {
        &-#{$name}--#{$breakpoint} {
          margin-bottom: if($spacing == auto, $spacing, rem($spacing)) !important;
        }
      }
    }
  }
}

.ml {
  @each $name, $spacing in $spacings {
    &-#{$name} {
      margin-left: if($spacing == auto, $spacing, rem($spacing)) !important;
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      @each $name, $spacing in $spacings {
        &-#{$name}--#{$breakpoint} {
          margin-left: if($spacing == auto, $spacing, rem($spacing)) !important;
        }
      }
    }
  }
}

.mr {
  @each $name, $spacing in $spacings {
    &-#{$name} {
      margin-right: if($spacing == auto, $spacing, rem($spacing)) !important;
    }
  }

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      @each $name, $spacing in $spacings {
        &-#{$name}--#{$breakpoint} {
          margin-right: if($spacing == auto, $spacing, rem($spacing)) !important;
        }
      }
    }
  }
}
