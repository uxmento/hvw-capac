/*
 * FLEX
 * Flexbox utility classes
 */

.wrap {
  flex-wrap: wrap !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        flex-wrap: wrap !important;
      }
    }
  }
}

.nowrap {
  flex-wrap: nowrap !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        flex-wrap: nowrap !important;
      }
    }
  }
}

.justify-start {
  justify-content: flex-start !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        justify-content: flex-start !important;
      }
    }
  }
}

.justify-end {
  justify-content: flex-end !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        justify-content: flex-end !important;
      }
    }
  }
}

.justify-center {
  justify-content: center !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        justify-content: center !important;
      }
    }
  }
}

.justify-between {
  justify-content: space-between !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        justify-content: space-between !important;
      }
    }
  }
}

.justify-around {
  justify-content: space-around !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        justify-content: space-around !important;
      }
    }
  }
}

.align-start {
    align-items: flex-start !important;

    @each $breakpoint in map-keys($breakpoints) {
        @include mq($breakpoint) {
            &--#{$breakpoint} {
              align-items: flex-start !important;
            }
        }
    }
}

.align-end {
  align-items: flex-end !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        align-items: flex-end !important;
      }
    }
  }
}

.align-center {
  align-items: center !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        align-items: center !important;
      }
    }
  }
}

.align-stretch {
  align-items: stretch !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        align-items: stretch !important;
      }
    }
  }
}

.align-self-start {
  align-self: flex-start !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        align-self: flex-start !important;
      }
    }
  }
}

.align-self-end {
  align-self: flex-end !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        align-self: flex-end !important;
      }
    }
  }
}

.align-self-stretch {
  align-self: stretch !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        align-self: stretch !important;
      }
    }
  }
}

.align-self-center {
  align-self: center !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        align-self: center !important;
      }
    }
  }
}

.direction-row {
  flex-direction: row !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        flex-direction: row !important;
      }
    }
  }
}

.direction-row-reverse {
  flex-direction: row-reverse !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        flex-direction: row-reverse !important;
      }
    }
  }
}

.direction-column {
  flex-direction: column !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        flex-direction: column !important;
      }
    }
  }
}

.direction-column-reverse {
  flex-direction: column-reverse !important;

  @each $breakpoint in map-keys($breakpoints) {
    @include mq($breakpoint) {
      &--#{$breakpoint} {
        flex-direction: column-reverse !important;
      }
    }
  }
}